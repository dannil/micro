spring.graphql:
  graphiql.enabled: true
  websocket.path: /graphql

spring.datasource.hikari:
  connectionTimeout: 20000
  maximumPoolSize: 5

spring.datasource:
  url: jdbc:postgresql://localhost:32100/person-service
  username: person-service
  password: person-service

spring.jpa.properties.jakarta.persistence.schema-generation:
  database.action: drop-and-create
  create-source: metadata
  drop-source: metadata

spring.kafka:
    bootstrap-servers: "localhost:32300"
    consumer:
      group-id: person-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties.spring.json.trusted.packages: com.github.dannil.springgraphql.personservice.*
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
